---

#Add specific repositroy to download nginx verison with upload module in 

- name: '[Ubuntu] Install nginx-extras repository'
  apt_repository:
    repo: ppa:galaxyproject/nginx
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

- name: '[Ubuntu] Prevent nginx update from Ubuntu repository'
  copy:
    src: 'galaxyproject-nginx-pin-700'
    dest: '/etc/apt/preferences.d/'
  become_user: root
  become_method: sudo
  when: ansible_os_family == "Debian"

# Differently from RedHat OS family in Debian SO family web server are run
# by the www-data user. So in this case we add galaxy to www-data group
# to solve permission problem related to the fact that nginx is run by www-data user

- name: '[Ubuntu] Add the user www-data in galaxy group'
  user:
    name: galaxy
    group: www-data
  when: ansible_os_family == "Debian"

- name: '[Ubuntu] Install nginx dependencies'
  apt:
    pkg: nginx-common=1.10.3-0ubuntu0.16.04.2ppa1
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

- name: Create tmp dir
  file:
    path: '{{ database_path }}/tmp'
    state: directory
    owner: "{{ laniakea_galaxy_user.name }}"
    group: "{{ laniakea_galaxy_group.name }}"

- name: '[Ubuntu] Create nginx_upload_store dir'
  file:
    path: '{{ database_path }}/tmp/nginx_upload_store'
    state: directory
    owner: www-data
    group: "{{ laniakea_galaxy_group.name }}"
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

- name: '[EL] make a new user'
  user: 
    name: nginx
    state: present
    group: galaxy
  when: ansible_os_family == "RedHat" 

- name: '[EL] Add NGINX repository'
  command: 'yum-config-manager --add-repo https://depot.galaxyproject.org/yum/galaxy.repo'
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat"

- name: '[Ubuntu] Include nginx role'
  include_role:
    name: galaxyproject.nginx
  vars:
    nginx_selinux_allow_local_connections: true
    nginx_flavor: extras=1.10.3-0ubuntu0.16.04.2ppa1
    nginx_servers:
      - galaxy
    nginx_enable_default_server: false
    nginx_conf_http:
      client_max_body_size: 1g
    galaxy_server_dir: "{{ laniakea_galaxy_server_dir }}" 
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

- name: '[EL] Include nginx role'
  include_role:
    name: galaxyproject.nginx
  vars:
    nginx_selinux_allow_local_connections: true
    nginx_flavor: galaxy
    nginx_servers:
      - galaxy
    nginx_enable_default_server: false
    nginx_conf_http:
      client_max_body_size: 1g
    galaxy_server_dir: "{{ laniakea_galaxy_server_dir }}" 
    ansible_python_interpreter: /usr/bin/python
    nginx_conf_user: galaxy
    nginx_conf_group: galaxy
  when: ansible_os_family == "RedHat" 

##############Ubuntu 20.04 install nginx and add upload module###############

- name: '[Ubuntu 20.04] Install nginx and build dependencies'
  apt:
    name: ['nginx-full', 'libpcre3', 'libpcre3-dev', 'libssl-dev']
    state: present
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'

- name: '[Ubuntu 20.04]  Change nginx config'
  lineinfile:
    path: /etc/nginx/nginx.conf
    insertbefore: '^events '
    line: 'load_module modules/ngx_http_upload_module.so;'
    state: present
  register: nginxload
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'

- name: '[Ubuntu 20.04] Download nginx packages and module to build http uplaoad'
  get_url:
    url: "{{ item }}"
    dest: /opt/
  with_items:
    - https://github.com/vkholodkov/nginx-upload-module/archive/2.3.0.tar.gz
    - https://nginx.org/download/nginx-1.18.0.tar.gz
  when: nginxload.changed

- name: '[Ubuntu 20.04] Unzip nginx and the upload module'
  unarchive:
    src: "{{ item }}"
    dest: /opt
    remote_src: yes
  with_items:
    - /opt/nginx-upload-module-2.3.0.tar.gz
    - /opt/nginx-1.18.0.tar.gz
  when: nginxload.changed

- name: '[Ubuntu 20.04] Build nginx'
  shell: ./configure --with-compat --add-dynamic-module=/opt/nginx-upload-module-2.3.0; make modules
  args:
    chdir: /opt/nginx-1.18.0
  when: nginxload.changed

- name: '[Ubuntu 20.04] Copy module to destination'
  copy:
    remote_src: yes
    src: /opt/nginx-1.18.0/objs/ngx_http_upload_module.so
    dest: /usr/share/nginx/modules/ngx_http_upload_module.so
  when: nginxload.changed

- name: '[Ubuntu 20.04] Remove all nginx files'
  find:
    paths: /opt
    file_type: any
  register: nginx_files_to_delete
  when: nginxload.changed

- name: '[Ubuntu 20.04] Ansible remove nginx files'
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ nginx_files_to_delete.files }}"
  when: nginxload.changed


    #- name: download and recompile nginx to add upload module
    #  become: true
    #  become_method: sudo
    #  script: nginx_upload_module.sh
    #  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'

- name: '[Ubuntu 20.04] Include nginx role'
  include_role:
    name: galaxyproject.nginx
  vars:
    nginx_flavor: full
    nginx_servers:
      - galaxy
    nginx_enable_default_server: false
    nginx_conf_http:
      client_max_body_size: 1g
    galaxy_server_dir: "{{ laniakea_galaxy_server_dir }}"
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'

  #- name: restart nginx
  #  systemd:
  #    state: restarted
  #    name: nginx
