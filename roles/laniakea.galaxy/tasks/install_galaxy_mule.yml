

- name: Include galaxy role
  include_role:
    name: galaxyproject.galaxy
    public: true
  vars:
    pip_virtualenv_command: /usr/bin/python3 -m virtualenv
    galaxy_create_user: "{{ laniakea_galaxy_create_user }}"
    galaxy_force_checkout: "{{ laniakea_galaxy_force_checkout }}"
    galaxy_separate_privileges: "{{ laniakea_galaxy_separate_privileges }}"
    galaxy_manage_paths: "{{ laniakea_galaxy_manage_paths }}"
    galaxy_layout: "{{ laniakea_galaxy_layout }}"
    galaxy_privsep_user: "{{ laniakea_galaxy_privsep_user }}"
    galaxy_user: '{{ laniakea_galaxy_user }}' 
    galaxy_group: '{{ laniakea_galaxy_group }}'
    galaxy_root: '{{ galaxy_install_path }}'
    galaxy_mutable_config_dir: '{{ laniakea_galaxy_config_dir }}'
    galaxy_config_file: '{{ laniakea_galaxy_config_file }}'
    galaxy_commit_id: "{{ galaxy_version }}"
    galaxy_config_style: yaml
    galaxy_config:
      galaxy:
        brand: "{{ galaxy_instance_description }}"
        admin_users: "{{ GALAXY_ADMIN_EMAIL }}"
        admin_email: "{{ GALAXY_ADMIN_EMAIL }}"
        admin_username: "{{ GALAXY_ADMIN_USERNAME }}"
        admin_password: "{{ GALAXY_ADMIN_PASSWORD }}"
        database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
        install_database_connection: "postgresql:///galaxy_tools?host=/var/run/postgresql"
        job_working_directory: '{{ database_path }}/job_working_directory' 
        file_path: '{{ database_path }}/files'
        new_file_path: '{{ database_path }}/tmp'
        check_migrate_tools: false
        tool_data_path: "{{ galaxy_mutable_data_dir }}/tool-data"
        tool_dependency_dir: "{{ tool_deps_path }}"
        template_cache_path: '{{ database_path }}/compiled_templates'
        citation_cache_data_dir: '{{ database_path }}/citations/data'
        citation_cache_lock_dir: '{{ database_path }}/citations/lock'
        whoosh_index_dir: '{{ database_path }}/whoosh_indexes'
        object_store_cache_path: '{{ database_path }}/object_store_cache'
        cluster_file_directory: '{{ database_path }}/pbs'
        nginx_upload_store: '{{ database_path }}/tmp/nginx_upload_store'
        nginx_upload_path: "/_upload"
        require_login: "True"
        allow_user_creation: "True"
        allow_user_impersonation: "True"
        new_user_dataset_access_role_default_private: "True"
        ftp_upload_dir: '{{ database_path }}/ftp'
        ftp_upload_site: ftp://localhost
        conda_prefix: '{{ laniakea_conda_prefix }}'
        conda_auto_install: true
        #add test-toolshed
        tool_sheds_config_file: '{{ laniakea_galaxy_config_dir }}/tool_sheds_conf.xml'
        #release_20.05 variables
        tool_search_index_dir: "{{ '{{ database_path }}/tool_search_index_dir' if ( galaxy_commit_id | replace ('release_','') |float) >= 20.05 else omit }}" 
        tool_cache_data_dir: "{{ '{{ database_path }}/tool_cache'  if ( galaxy_commit_id | replace ('release_','') |float) >= 20.05 else omit }}" 

      uwsgi:
        socket: 127.0.0.1:4001
        buffer-size: 16384
        processes: "{{ laniakea_uwsgi_processes }}"
        threads: "{{ laniakea_uwsgi_threads }}"
        offload-threads: "{{ laniakea_uwsgi_offload_threads }}" 
        static-map:
          - /static/style={{ laniakea_galaxy_server_dir }}/static/style
          - /static={{ laniakea_galaxy_server_dir }}/static
          - /favicon.ico={{ laniakea_galaxy_server_dir }}/static/favicon.ico
        static-safe: client/galaxy/images
        master: true
        virtualenv: "{{ laniakea_galaxy_venv_dir }}"
        pythonpath: "{{ laniakea_galaxy_server_dir }}/lib"
        module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
        manage-script-name: true
        thunder-lock: true
        die-on-term: true
        hook-master-start:
          - unix_signal:2 gracefully_kill_them_all
          - unix_signal:15 gracefully_kill_them_all
        py-call-osafterfork: true
        enable-threads: true
        stats: 127.0.0.1:4010
        #change log from tmp to var/log/galaxy
        logto: "{{ galaxy_log_path }}/uwsgi.log"
        no-orphans: true
        #nginx mule configuration
        mule: lib/galaxy/main.py
        farm: job-handlers:1

